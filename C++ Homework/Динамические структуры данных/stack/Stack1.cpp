/*
Данную программу выполнил Стеклянников Пётр Сергеевич из 151 группы. © Все права защищены.
*/

/*
Пример 1.1. УСЛОВИЕ: 
Создать стек, содержащий целые числа.
Создать новый стек, вставив новый элемент после первого (первого, введенного с клавиатуры или из файла) нечетного элемента.
Порядок следования чисел в новом стеке должен совпадать с первоначальным.
Например, было 1 2 3 4 5 6 7 8 9, стало  1 0 2 3 4 5 6 7 8 9
*/


#include<iostream>						//Подключение библиотеки ввода-вывода
using namespace std;


struct stack {							//Стек описывается как struct следующим образом
	int inf;
	stack * next;
};


void push(stack * &h, int x) {			//Функция добавления элемента в стек
	stack * r = new stack;				//Создаём новый элемент
	r -> inf = x;						//Информационное поле inf = x
	r -> next = h;						//Cледующим элементов является h
	h = r;								//Теперь r является головой
}


int pop(stack * &h) {					//Функция удаления элемента из стека (и возвращение его значения)
	int i = h -> inf;					//Значение первого элемента
	stack * r = h;						//Указатель на голову стека
	h = h -> next;						//Переносим указатель на следующий элемент
	delete r;							//Удаляем первый элемент
	return i;							//Возвращаем значение
}


void reverse(stack * &h) {				//Функция "обращения" стека
	stack * head1 = NULL;				//Инициализация буферного стека

	while (h)							//Пока стек не пуст
		push(head1, pop(h));			//Переписываем из одного стека в другой

	h = head1;							//Переобозначаем указатели
}


stack * result(stack * &h, int &elem) {	//Функция записи результата
	stack * res = NULL;					//Инициализация
	stack * h1 = NULL;					//Инициализация

	bool flag = 0;

	while (h) {							//Пока стек не пуст
		int x = pop(h);					//Удаляем первый элемент и запоминаем его значение

		push(res, x);					//Записываем в результат res

		if (flag == 0 && x % 2 != 0) {	//Вставляем новый элемент после первого нечетного
			push(res, elem);
			flag = 1;
		}
	}

	reverse(res);						//Переворачиваем стек-результат res
	return res;							//Возвращаем стек-результат res
}




int main() {							//Главная функция
	setlocale(LC_ALL, "RUS");

	int n;								//Количество целых чисел
	cout << "n = ";
	cin >> n;							//Вводим количество целых чисел
	cout << endl;

	stack * head = NULL;				//Инициализация
	int x;
	for (int i = 0; i < n; i++) {		//Создаем стек
		cin >> x;						//Вводим число
		push(head, x);					//Заполняем стек
	}

	reverse(head);						//Переворачиваем стек, чтобы был тот порядок, в котором мы вводили числа

	int elem;							//Вводим новый элемент
	cout << "Новый элемент = ";
	cin >> elem;

	stack * res = result(head, elem);	//Результат (Стек, где мы ввели новый элемент после первого нечетного)
	cout << endl;
	while (res)							//Пока res не станет пустым
		cout << pop(res) << " ";		//Выводим на экран элементы стека res функцией pop(...)
	cout << endl;
	
	system("Pause");					//Пауза
	return 0;							//Конец программы
}
