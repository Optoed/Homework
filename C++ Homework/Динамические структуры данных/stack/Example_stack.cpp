/*
Данную программу выполнил Стеклянников Пётр Сергеевич из 151 группы. © Все права защищены.
*/

/*
Пример 1.1. УСЛОВИЕ: 
Создать стек, состоящий из целых чисел.
Удалить все повторяющиеся элементы, оставив только их первые вхождения.
Порядок следования элементов должен совпадать с порядком ввода элементов
(Например, вводится следующий набор данных: 1 2 3 1 2 4 1. Результат: 1 2 3 4.)
*/


#include<iostream>					//Подключение библиотеки ввода-вывода
using namespace std;


struct stack {						//Стек описывается как struct следующим образом
	int inf;
	stack * next;
};


void push(stack * &h, int x) {		//Функция добавления элемента в стек
	stack * r = new stack;			//Создаём новый элемент
	r -> inf = x;					//Информационное поле inf = x
	r -> next = h;					//Cледующим элементов является h
	h = r;							//Теперь r является головой
}


int pop(stack * &h) {				//Функция удаления элемента из стека (и возвращение его значения)
	int i = h -> inf;				//Значение первого элемента
	stack * r = h;					//Указатель на голову стека
	h = h -> next;					//Переносим указатель на следующий элемент
	delete r;						//Удаляем первый элемент
	return i;						//Возвращаем значение
}


void reverse(stack * &h) {			//Функция "обращения" стека
	stack * head1 = NULL;			//Инициализация буферного стека

	while (h)						//Пока стек не пуст
		push(head1, pop(h));		//Переписываем из одного стека в другой

	h = head1;						//Переобозначаем указатели
}


stack * result(stack * &h) {		//Функция записи результата
	stack * res = NULL;				//Инициализация
	stack * h1 = NULL;				//Инициализация

	while (h) {						//Пока стек не пуст
		int x = pop(h);				//Удаляем первый элемент и запоминаем его значение
		push(res, x);				//Записываем в результат res

		while (h) {					//Пока стек не пуст
			int y = pop(h);			//Удаляем элемент из стека и запоминаем его значение
			if (y != x)				//Если он не равен x
				push(h1, y);		//Записываем в новый стек
		}

		reverse(h1);				//Переворачиваем стек h1
		h = h1;						//Переобозначаем указатели (h, т.е. head, - теперь это h1)
		h1 = NULL;					//Переобозначаем указатели (обнуляем h1)
	}

	reverse(res);					//Переворачиваем стек-результат res
	return res;						//Возвращаем стек-результат res
}




int main() {						//Главная функция
	int n;							//Количество целых чисел
	cout << "n = ";
	cin >> n;						//Вводим количество целых чисел
	cout << endl;

	stack * head = NULL;			//Инициализация
	int x;

	for (int i = 0; i < n; i++) {	//Создаем стек
		cin >> x;					//Вводим число
		push(head, x);				//Заполняем стек
	}

	reverse(head);					//Переворачиваем стек, чтобы был тот порядок, в котором мы вводили числа

	stack * res = result(head);		//Результат (Стек, где мы удалили все повторяющиеся числа)
	cout << endl;
	while (res)						//Пока res не станет пустым
		cout << pop(res) << " ";	//Выводим на экран элементы стека res функцией pop(...)
	cout << endl;
	
	system("Pause");				//Пауза
	return 0;						//Конец программы
}
